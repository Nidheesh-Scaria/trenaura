



<head>
  
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    body {
      background-color: #f8f9fa;
    }
    .form-section {
      background-color: #ffffff;
      border: 1px solid #ddd;
      border-radius: 10px;
      padding: 20px;
      margin-bottom: 30px;
    }
    .btn a {
      color: white;
      text-decoration: none;
    }
    .error-message {
      color: red;
      font-size: 0.875rem;
    }
    .table th, .table td {
      vertical-align: middle;
    }
    
    .card-header {
      background-color: #f8f9fa;
      padding: 1rem;
      border-radius: 8px;
    }

    .form-section {
      background-color: #ffffff;
      border: 1px solid #ddd;
      border-radius: 10px;
      padding: 20px;
      margin-bottom: 30px;
    }

    .form-control {
      margin-bottom: 15px;
    }

    .btn-primary {
      width: 100%;
      background-color: #0267fe;
    }

    .create-categoryBtn{
      background-color: rgb(13, 13, 155); 
      color:white
    }
    .create-categoryBtn:hover{
      background-color: rgb(13, 13, 199); 
      color:white
    }

    .btn-info, .btn-success, .btn-danger {
      width: 100px;
      margin-bottom: 5px;
    }

    .btn a {
      color: white;
      text-decoration: none;
    }

    .pagination-container {
      text-align: center;
      margin-top: 20px;
    }

    .error-message {
      color: red;
      font-size: 0.875rem;
    }

    .table thead {
      background-color: #f1f1f1;
    }

    .table td, .table th {
      vertical-align: middle;
    }

    @media (max-width: 768px) {
      .form-section {
        margin: 10px 0;
      }
    }
  </style>
</head>
<body>
 <div class="container-fluid px-4 py-4">
  <h3 class="mb-4">Category Management</h3>
  <div class="row">
    <!-- Add Category Form -->
    <div class="col-md-4">
      <div class="card shadow-sm p-4">
        <h5 class="mb-3">Add New Category</h5>
        <form action="/admin/addCategory" method="POST" onsubmit="return handleFormSubmit(event)"> 
          <div class="mb-3">
            <label for="name" class="form-label">Category Name</label>
            <input type="text" name="name" id="name" class="form-control" placeholder="Enter category name">
            <small id="name-error" class="text-danger error-message" style="display: none;"></small>

          </div>
          <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea name="description" id="descriptionId" rows="4" class="form-control" placeholder="Enter description"></textarea>
            <small id="description-error" class="text-danger error-message" style="display: none;"></small>
          </div>
          <button type="submit" class="btn w-100 create-categoryBtn" >Create Category</button>
        </form>
      </div>
    </div>

    <!-- Category List -->
    <div class="col-md-8">
      <div class="card shadow-sm p-3">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <input type="text" placeholder="Search categories..." class="form-control w-75" />
          <a href="/admin/category" class="btn btn-outline-secondary ms-2">Refresh</a>
        </div>
        <table class="table table-hover align-middle text-center">
          <thead class="table-light">
            <tr>
              <th>Name</th>
              <th>Description</th>
              <th>Offer Price</th>
              <th>Offer</th>
              <th>Status</th>
              <th>List/Unlist</th>
              <th>Edit</th>
            </tr>
          </thead>
          <tbody>
            {{#if categories.length}}
              {{#each categories}}
                <tr>
                  <td>{{this.name}}</td>
                  <td>{{this.description}}</td>
                  <td>{{#if this.categoryOffer}}{{this.categoryOffer}}{{else}}NA{{/if}}</td>
                  <td>
                    <a href="/admin/category/offer/add/{{this._id}}" class="btn btn-sm btn-info mb-1">Add Offer</a><br>
                    <a href="/admin/category/offer/remove/{{this._id}}" class="btn btn-sm btn-info">Remove</a>
                  </td>
                  <td>
                    {{#if this.isListed}}
                      <span class="badge bg-success">Listed</span>
                    {{else}}
                      <span class="badge bg-danger">Unlisted</span>
                    {{/if}}
                  </td>
                  <td>
        
                    {{#if this.isListed}}
                      <form action="/admin/unlistCategory/{{this._id}}" method="post">
                        <button type="submit" class="btn btn-danger btn-sm">Unlist</button>
                      </form>
                    {{else}}
                      <form action="/admin/listCategory/{{this._id}}" method="post">
                        <button type="submit" class="btn btn-success btn-sm">List</button>
                      </form>
                    {{/if}}
                  </td>
                  <td>
                  
                    <a href="#" class="btn btn-primary btn-sm" onclick="openEditModal('{{this._id}}', '{{this.name}}', '{{this.description}}')">Edit</a>
                    <a href="#" class="btn btn-danger btn-sm" onclick="openDeleteModal('{{this._id}}', '{{this.name}}', '{{this.description}}')">Delete</a>
                    
                  </td>
                </tr>
              {{/each}}
            {{else}}
              <tr>
                <td colspan="7" class="text-center">No categories found</td>
              </tr>
            {{/if}}
          </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center">
            {{#if hasPrevPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{prevPage}}"><</a>
              </li>
            {{/if}}

            {{#each pages}}
              <li class="page-item {{#if this.active}}active{{/if}}">
                <a class="page-link" href="?page={{this.number}}">{{this.number}}</a>
              </li>
            {{/each}}

            {{#if hasNextPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{nextPage}}">></a>
              </li>
            {{/if}}
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>



<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="editCategoryForm">
        <div class="modal-header">
          <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="editCategoryId" />
          <div class="mb-3">
            <label for="editName" class="form-label">Category Name</label>
            <input type="text" id="editName" class="form-control" />
          </div>
          <div class="mb-3">
            <label for="editDescription" class="form-label">Description</label>
            <textarea id="editDescription" rows="4" class="form-control" ></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Changes</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- delete Category Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="deleteCategoryForm">
        <div class="modal-header">
          <h5 class="modal-title" id="editCategoryModalLabel">Delete Category</h5>
          <input type="hidden" id="deleteCategoryId" />
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-danger">Delete</button>
        </div>
      </form>
    </div>
  </div>
</div>



  {{#if successMessage}}
<script>
  Swal.fire({
    icon: 'success',
    title: 'Success!',
    text: '{{successMessage}}',
    confirmButtonColor: '#3085d6',
    timer: 2000,
    timerProgressBar: true
  });
</script>
{{/if}}




  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



  <script>

    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) return;

      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();

      fetch('/admin/addCategory', {
        method: "POST",
        headers: { 'Content-Type': "application/json" },
        body: JSON.stringify({ name, description })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw new Error(err.error); });
        }
        return response.json();
      })
     .then((data) => {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message || "Category added successfully"
        }).then(() => {
          location.reload(); // only reload after user clicks OK
        });
      })
      .catch(error => {
        Swal.fire({
          icon: 'error',
          title: "Oops",
          text: error.message === "Category already exists" ? "Category already exists" : error.message
        });
        console.log(error.message)
      });
    }

    function validateForm() {
      clearErrorMessage();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (name === '') {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Name should contain only alphabetic characters");
        isValid = false;
      }

      if (description === '') {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
      } else if (description.length < 4) {
        displayErrorMessage("description-error", "Description should be more than 4 characters");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessage() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((el) => {
        el.innerText = "";
        el.style.display = 'none';
      });
    }

// Function to open the edit modal
  function openEditModal(id, name, description) {
    $('#editCategoryId').val(id);
    $('#editName').val(name);
    $('#editDescription').val(description);
    $('#editCategoryModal').modal('show');
  }
// Handle edit form submission
  $('#editCategoryForm').on('submit', function (e) {
    e.preventDefault();
    const id = $('#editCategoryId').val();
    const name = $('#editName').val().trim();
    const description = $('#editDescription').val().trim();

    if (name === '' || description === '') {
      Swal.fire('Error', 'Fields cannot be empty', 'error');
      return;
    }

    fetch(`/admin/editCategory/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, description })
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        Swal.fire('Updated!', data.message, 'success').then(() => location.reload());
      } else {
        Swal.fire('Error', data.message || 'Something went wrong', 'error');
      }
    })
    .catch(err => Swal.fire('Error', err.message, 'error'));
  });


// Function to open the delete modal
function openDeleteModal(id, name, description) {
  $('#deleteCategoryId').val(id); // Fixed the ID
  $('#deleteCategoryModal').modal('show');
}

// Handle delete form submission
$('#deleteCategoryForm').on('submit', function (e) {
  e.preventDefault();
  
  const id = $('#deleteCategoryId').val();

 
  fetch(`/admin/deleteCategory/${id}`, {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({}) 
  })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        Swal.fire('Deleted!', data.message, 'success').then(() => {
          location.reload();
        });
      } else {
        Swal.fire('Error', data.message || 'Something went wrong', 'error');
      }
    })
    .catch(err => {
      Swal.fire('Error', err.message, 'error');
    });
});

  </script>


</body>




