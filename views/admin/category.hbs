

  <head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/adminCustomers.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  
  <style>
    body {
      background-color: #f8f9fa;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      margin: 0 !important;
      margin-left: 0 !important;
    }
    
    .page-title {
      font-size: 1.75rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
    }
    
    .card {
      border: none;
      box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
      border-radius: 0.5rem;
      margin-bottom: 1.5rem;
    }
    
    .form-section {
      background-color: #ffffff;
      border-radius: 0.5rem;
      padding: 1.25rem;
    }
    
    .form-label {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }
    
    .form-control:focus {
      border-color: #0267fe;
      box-shadow: 0 0 0 0.25rem rgba(2, 103, 254, 0.25);
    }
    
    .btn-primary {
      background-color: #0267fe;
      border-color: #0267fe;
    }
    
    .btn-primary:hover {
      background-color: #0255d4;
      border-color: #0255d4;
    }
    
    .create-categoryBtn {
      background-color: rgb(13, 13, 155);
      color: white;
      padding: 0.5rem 1rem;
      font-weight: 500;
    }
    
    .create-categoryBtn:hover {
      background-color: rgb(13, 13, 199);
      color: white;
    }
    
    .error-message {
      color: #dc3545;
      font-size: 0.8rem;
      margin-top: 0.25rem;
    }
    
    .table-responsive {
      margin-bottom: 1rem;
    }
    
    .table th {
      background-color: #f1f1f1;
      font-weight: 600;
      padding: 0.75rem;
    }
    
    .table td {
      padding: 0.75rem;
      vertical-align: middle;
    }
    
    .badge {
      padding: 0.5em 0.75em;
      font-weight: 500;
    }
    
    .action-buttons .btn {
      margin-bottom: 0.5rem;
      width: 100%;
    }
    
    .search-refresh-container {
      margin-bottom: 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 1rem;
    }
    
    /* Create Category Modal Specific Styles */
    #createCategoryModal .modal-content {
      border-radius: 0.5rem;
    }
    
    #createCategoryModal .modal-header {
      background-color: #0e0f63;
      color: white;
      border-radius: 0.5rem 0.5rem 0 0;
    }
    #createCategoryModal .btn-create {
      background-color: #0e0f63;
      color: white;
    }
    #createCategoryModal .btn-create:hover {
      background-color: #101286e5;
      color: white;
    }
    
    #createCategoryModal .btn-close {
      filter: brightness(0) invert(1);
    }

    #editCategoryModal .btn-save{
       background-color: #0e0f63;
      color: white;
    }
    #editCategoryModal .btn-save:hover{
      background-color: #101286e5;
      color: white;
    }
    
    /* Responsive adjustments */
    @media (max-width: 991.98px) {
      .page-title {
        font-size: 1.5rem;
      }
      
      .card {
        padding: 1rem !important;
      }
    }
    
    @media (max-width: 767.98px) {
      .action-buttons .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
      }
      
      .table td, .table th {
        padding: 0.5rem;
      }
      
      .card-title {
        font-size: 1.25rem;
      }
      
      .search-refresh-container {
        flex-direction: column;
      }
      
      .search-refresh-container .form-control {
        margin-bottom: 0.5rem;
        width: 100% !important;
      }
      
      .search-refresh-container .btn {
        width: 100%;
      }
    }
    
    @media (max-width: 575.98px) {
      .container-fluid {
        padding: 1rem !important;
      }
      
      .table-header-desktop {
        display: none;
      }
      
      .mobile-card {
        margin-bottom: 1rem;
        padding: 1rem;
      }
      
      .mobile-category-item {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 1rem;
        margin-bottom: 1rem;
      }
      
      .mobile-category-detail {
        margin-bottom: 0.5rem;
      }
      
      .mobile-category-actions {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 1rem;
      }
      
      .mobile-category-actions .btn {
        flex: 1;
        min-width: 80px;
      }
    }
  </style>
</head>
<body>
  <div class="container-fluid px-4 py-4">
    <h3 class="page-title">Category Management</h3>
    <div class="row">
      <!-- Category List -->
      <div class="col-lg-12">
        <div class="card shadow-sm p-3">
          <div class="d-flex justify-content-between align-items-center search-refresh-container">
             <form action="/admin/category" method="GET" class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" name="search" style="border-radius:20px;" value="{{search}}" placeholder="Search customers...">
                <button type="button" class="clear-btn" title="Clear" onclick="window.location.href='/admin/category'">
                <span style="font-weight: 600;">X</span>
                </button>
              </form>
            <button class="btn create-categoryBtn" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
              Create Category
            </button>
          </div>
          
          <!-- Desktop/Tablet View -->
          <div class="table-responsive d-none d-sm-block">
            <table class="table table-hover align-middle text-center">
              <thead class="table-light table-header-desktop">
                <tr>
                  <th>No</th>
                  <th>Name</th>
                  <th>Description</th>
                  <th>Offer Price</th>
                  <th>Offers</th>
                  <th>Status</th>
                  <th>List/Unlist</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody id="categoryTableBody">
                {{#if categories.length}}
                  {{#each categories}}
                    <tr>
                      <td>{{this.name}}</td>
                      <td>{{this.description}}</td>
                      <td>{{#if this.categoryOffer}}{{this.categoryOffer}}{{else}}NA{{/if}}</td>
                      <td>
                        <div class="d-flex flex-column gap-1">
                          <a href="/admin/category/offer/add/{{this._id}}" class="btn btn-sm btn-info">Add Offer</a>
                          <a href="/admin/category/offer/remove/{{this._id}}" class="btn btn-sm btn-info">Remove</a>
                        </div>
                      </td>
                      <td>
                        {{#if this.isListed}}
                          <span class="badge bg-success">Listed</span>
                        {{else}}
                          <span class="badge bg-danger">Unlisted</span>
                        {{/if}}
                      </td>
                      <td>
                        {{#if this.isListed}}
                          <form action="/admin/unlistCategory/{{this._id}}" method="post">
                            <button type="submit" class="btn btn-danger btn-sm">Unlist</button>
                          </form>
                        {{else}}
                          <form action="/admin/listCategory/{{this._id}}" method="post">
                            <button type="submit" class="btn btn-success btn-sm">List</button>
                          </form>
                        {{/if}}
                      </td>
                      <td class="action-buttons">
                        <button class="btn btn-primary btn-sm mb-1" onclick="openEditModal('{{this._id}}', '{{this.name}}', '{{this.description}}')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="openDeleteModal('{{this._id}}')">Delete</button>
                      </td>
                    </tr>
                  {{/each}}
                {{else}}
                  <tr>
                    <td colspan="7" class="text-center">No categories found</td>
                  </tr>
                {{/if}}
              </tbody>
            </table>
          </div>
          
          <!-- Mobile View -->
          <div class="d-block d-sm-none" id="mobileCategoryView">
            {{#if categories.length}}
              {{#each categories}}
                <div class="mobile-category-item">
                  <div class="mobile-category-detail">
                    <strong>Name:</strong> {{this.name}}
                  </div>
                  <div class="mobile-category-detail">
                    <strong>Description:</strong> {{this.description}}
                  </div>
                  <div class="mobile-category-detail">
                    <strong>Offer Price:</strong> {{#if this.categoryOffer}}{{this.categoryOffer}}{{else}}NA{{/if}}
                  </div>
                  <div class="mobile-category-detail">
                    <strong>Status:</strong>
                    {{#if this.isListed}}
                      <span class="badge bg-success">Listed</span>
                    {{else}}
                      <span class="badge bg-danger">Unlisted</span>
                    {{/if}}
                  </div>
                  <div class="mobile-category-actions">
                    <button class="btn btn-primary btn-sm" onclick="openEditModal('{{this._id}}', '{{this.name}}', '{{this.description}}')">Edit</button>
                    <button class="btn btn-danger btn-sm" onclick="openDeleteModal('{{this._id}}')">Delete</button>
                    
                    {{#if this.isListed}}
                      <form action="/admin/unlistCategory/{{this._id}}" method="post" class="d-inline">
                        <button type="submit" class="btn btn-danger btn-sm w-100">Unlist</button>
                      </form>
                    {{else}}
                      <form action="/admin/listCategory/{{this._id}}" method="post" class="d-inline">
                        <button type="submit" class="btn btn-success btn-sm w-100">List</button>
                      </form>
                    {{/if}}
                    
                    <div class="dropdown w-100">
                      <button class="btn btn-info btn-sm dropdown-toggle w-100" type="button" data-bs-toggle="dropdown">
                        Offers
                      </button>
                      <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/admin/category/offer/add/{{this._id}}">Add Offer</a></li>
                        <li><a class="dropdown-item" href="/admin/category/offer/remove/{{this._id}}">Remove Offer</a></li>
                      </ul>
                    </div>
                  </div>
                </div>
              {{/each}}
            {{else}}
              <div class="text-center py-4">No categories found</div>
            {{/if}}
          </div>

          <!-- Pagination -->
      
          <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center">
            
            {{#if hasPrevPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{prevPage}}&search={{search}}">&lt;</a>
              </li>
            {{/if}}

            {{#each pages}}
              <li class="page-item {{#if this.active}}active{{/if}}">
                <a class="page-link" href="?page={{this.number}}&search={{../search}}">{{this.number}}</a>
              </li>
            {{/each}}

            {{#if hasNextPage}}
              <li class="page-item">
                <a class="page-link" href="?page={{nextPage}}&search={{search}}">&gt;</a>
              </li>
            {{/if}}

          </ul>
        </nav>

        </div>
      </div>
    </div>
  </div>

  <!-- Edit Category Modal -->
  <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <form id="editCategoryForm">
          <div class="modal-header">
            <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <input type="hidden" id="editCategoryId" />
            <div class="mb-3">
              <label for="editName" class="form-label">Category Name</label>
              <input type="text" id="editName" class="form-control" />
              <small id="edit-name-error" class="error-message" style="display: none;"></small>
            </div>
            <div class="mb-3">
              <label for="editDescription" class="form-label">Description</label>
              <textarea id="editDescription" rows="4" class="form-control"></textarea>
              <small id="edit-description-error" class="error-message" style="display: none;"></small>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-save">Save Changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Delete Category Modal -->
  <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
      <div class="modal-content">
        <form id="deleteCategoryForm">
          <div class="modal-header">
            <h5 class="modal-title" id="deleteCategoryModalLabel">Confirm Delete</h5>
            <input type="hidden" id="deleteCategoryId" />
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>Are you sure you want to delete this category?</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-danger">Delete</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Create Category Modal -->
  <div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <form id="createCategoryForm">
          <div class="modal-header">
            <h5 class="modal-title" id="createCategoryModalLabel">Create New Category</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="createName" class="form-label">Category Name</label>
              <input type="text" id="createName" class="form-control"/>
              <small id="create-name-error" class="error-message" style="display: none;"></small>
            </div>
            <div class="mb-3">
              <label for="createDescription" class="form-label">Description</label>
              <textarea id="createDescription" rows="4" class="form-control"></textarea>
              <small id="create-description-error" class="error-message" style="display: none;"></small>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-create">Create Category</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <!-- Scripts -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>

  <script>
    // Success message handler
    {{#if successMessage}}
      Swal.fire({
        icon: 'success',
        title: 'Success!',
        text: '{{successMessage}}',
        confirmButtonColor: '#3085d6',
        timer: 2000,
        timerProgressBar: true
      });
    {{/if}}

    // Form validation
    function validateForm() {
      clearErrorMessage();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("descriptionId").value.trim();
      let isValid = true;

      if (name === '') {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Name should contain only alphabetic characters");
        isValid = false;
      }

      if (description === '') {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
      } else if (description.length < 4) {
        displayErrorMessage("description-error", "Description should be more than 4 characters");
        isValid = false;
      }

      return isValid;
    }

    // Display error message
    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    // Clear error messages
    function clearErrorMessage() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((el) => {
        el.innerText = "";
        el.style.display = 'none';
      });
    }

    // Open edit modal
    function openEditModal(id, name, description) {
      $('#editCategoryId').val(id);
      $('#editName').val(name);
      $('#editDescription').val(description);
      $('#editCategoryModal').modal('show');
    }

    // Handle edit form submission
    $('#editCategoryForm').on('submit', function (e) {
      e.preventDefault();
      
      // Clear previous errors
      $('#edit-name-error').hide().text('');
      $('#edit-description-error').hide().text('');
      
      const id = $('#editCategoryId').val();
      const name = $('#editName').val().trim();
      const description = $('#editDescription').val().trim();
      
      // Validation
      let isValid = true;
      
      if (name === '') {
        $('#edit-name-error').text('Please enter a name').show();
        isValid = false;
      } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        $('#edit-name-error').text('Name should contain only alphabetic characters').show();
        isValid = false;
      }
      
      if (description === '') {
        $('#edit-description-error').text('Please enter a description').show();
        isValid = false;
      } else if (description.length < 4) {
        $('#edit-description-error').text('Description should be more than 4 characters').show();
        isValid = false;
      }
      
      if (!isValid) return;

      fetch(`/admin/editCategory/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          $('#editCategoryModal').modal('hide');
          Swal.fire({
            icon: 'success',
            title: 'Updated!',
            text: data.message,
            confirmButtonColor: '#3085d6',
            timer: 2000,
            timerProgressBar: true
          }).then(() => location.reload());
        } else {
          Swal.fire('Error', data.message || 'Something went wrong', 'error');
        }
      })
      .catch(err => Swal.fire('Error', err.message, 'error'));
    });

    // Open delete modal
    function openDeleteModal(id) {
      $('#deleteCategoryId').val(id);
      $('#deleteCategoryModal').modal('show');
    }

    // Handle delete form submission
    $('#deleteCategoryForm').on('submit', function (e) {
      e.preventDefault();
      
      const id = $('#deleteCategoryId').val();

      fetch(`/admin/deleteCategory/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({}) 
      })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          $('#deleteCategoryModal').modal('hide');
          Swal.fire({
            icon: 'success',
            title: 'Deleted!',
            text: data.message,
            confirmButtonColor: '#3085d6',
            timer: 2000,
            timerProgressBar: true
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire('Error', data.message || 'Something went wrong', 'error');
        }
      })
      .catch(err => {
        Swal.fire('Error', err.message, 'error');
      });
    });

    // Search functionality
    $(document).ready(function() {
      $("#searchCategories").on("keyup", function() {
        const value = $(this).val().toLowerCase();
        
        // Filter desktop view
        $("#categoryTableBody tr").filter(function() {
          $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
        
        // Filter mobile view
        $("#mobileCategoryView .mobile-category-item").filter(function() {
          $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
        });
      });
    });



    // Handle create form submission
   $('#createCategoryForm').on('submit', function(e) {
  e.preventDefault();
  
  // Clear previous errors
  $('.error-message').hide().text('');
  
  const name = $('#createName').val().trim();
  const description = $('#createDescription').val().trim();
  let isValid = true;

  // Frontend validation (matches backend rules)
  if (!name) {
    $('#create-name-error').text('Please enter a name').show();
    isValid = false;
  } else if (name.length < 2 || name.length > 50) {
    $('#create-name-error').text('Name must be 2-50 characters').show();
    isValid = false;
  } else if (!/^[a-zA-Z][a-zA-Z\s]*$/.test(name)) {
    $('#create-name-error').text('Only letters and spaces allowed').show();
    isValid = false;
  }

  if (!description) {
    $('#create-description-error').text('Please enter a description').show();
    isValid = false;
  } else if (description.length < 10 || description.length > 500) {
    $('#create-description-error').text('Description must be 10-500 characters').show();
    isValid = false;
  }

  if (!isValid) return;

  // Show loading state
  const submitBtn = $(this).find('button[type="submit"]');
  submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...');

  fetch('/admin/addCategory', {
    method: 'POST',
    headers: { 
      'Content-Type': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    },
    body: JSON.stringify({ name, description })
  })
  .then(async response => {
    const data = await response.json();
    if (!response.ok) {
      // Handle specific error cases
      if (response.status === 409) {
        $('#create-name-error').text(data.error).show();
      } else {
        throw new Error(data.error || 'Failed to create category');
      }
      return;
    }
    
    // Success handling
    $('#createCategoryModal').modal('hide');
    Swal.fire({
      icon: 'success',
      title: 'Success!',
      text: data.message,
      showConfirmButton: false,
      timer: 1500
    }).then(() => {
      window.location.reload();
    });
  })
  .catch(error => {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: error.message,
      confirmButtonColor: '#3085d6'
    });
  })
  .finally(() => {
    submitBtn.prop('disabled', false).text('Create Category');
  });
});

// Reset form on modal close
$('#createCategoryModal').on('hidden.bs.modal', function() {
  $(this).find('form')[0].reset();
  $('.error-message').hide().text('');
});
  </script>

</body>